/*
  The normal Memoized approach will give TLE at Leetcode.
  But this soluion(binary search approach) is accepted at Leetcode.
  Leetcode qn link : https://leetcode.com/problems/super-egg-drop/
*/

class Solution {
public:
    int solve(int e, int f, vector<vector<int>>& t) {
        if(t[e][f] != -1)
            return t[e][f];
        if(e == 1 || f == 0 || f == 1)
            return f;
        int ans = INT_MAX;
        
        int low = 1, high = f;
        while(low<high) {
            int mid   = low+(high-low)/2;
            
            int left  = solve(e-1, mid-1, t);
            int right = solve(e, f-mid, t);
            
            int temp = 1 + max(left, right);
            ans = min(ans, temp);
            
            if(left == right)
                break;
            else if(left < right) //go to worst case
                low = mid+1;
            else
                high = mid;
        }
        return t[e][f] = ans;
    }
    int superEggDrop(int K, int N) {
        vector<vector<int>> t(K+1, vector<int>(N+1, -1));
        return solve(K, N, t);
    }
};
