/*
    Company Tags  : Facebook, Samsung
    Leetcode Link : https://leetcode.com/problems/is-graph-bipartite/
*/

class Solution {
public:
    bool isBipartite(vector<vector<int>>& graph) {
        int n = graph.size();
        
        vector<int> color(n, 0);
        //color[i] = 1 means colored
        //color[i] = 0 means not colored
        
        queue<int> que;
        
        for(int i = 0; i<n; i++) {
            if(color[i] != 0)
                continue; //already colored
            
            color[i] = 1;
            que.push(i);
            //Do a BFS
            while(!que.empty()) {
                int curr = que.front();
                que.pop();
                
                //go to neighbours of curr
                for(int neighbour: graph[curr]) {
                    if(!color[neighbour]) {
                        color[neighbour] = -color[curr];
                        que.push(neighbour);
                    } else if(color[neighbour] == color[curr]) {
                        return false;
                    }
                }
            }
        }
        return true;
    }
};
