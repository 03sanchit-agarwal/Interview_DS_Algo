/*
    Company Tags  : Google, Amazon
    Leetcode Link : https://leetcode.com/problems/diagonal-traverse/
*/

/*
    Note : If you want to travel diaginally from right side, you can use the key map as (i-j) instead of (i+j)
    Related Qn : https://leetcode.com/problems/sort-the-matrix-diagonally/
*/

class Solution {
public:
    vector<int> findDiagonalOrder(vector<vector<int>>& matrix) {
        int row = matrix.size();
        if(row == 0)
            return {};
        int col = matrix[0].size();
        vector<int> result;
        map<int, vector<int>> mp;
        for(int i = 0; i<row; i++) {
            for(int j = 0; j<col; j++) {
                int sum = i+j;
                mp[sum].push_back(matrix[i][j]);
            }
        }
        
        int x = 0;
        for(auto it:mp) {
            vector<int> temp = it.second;
            if(x%2 == 0) {
                reverse(temp.begin(), temp.end());
            }
            result.insert(result.end(), temp.begin(), temp.end());
            x++;
        }
        return result;
    }
};
