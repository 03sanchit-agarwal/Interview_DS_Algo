/*
    Company Tags  : Adobe, Amazon, Microsoft, Morgan Stanley, Samsung, Snapdeal, Times Internet
    Leetcode Link : https://leetcode.com/problems/search-in-rotated-sorted-array-ii/
*/

class Solution {
public:
    int find_pivot(vector<int>& nums, int n) {
        int l = 0, r = n-1;
        while(l < r) {
            int mid = l + (r-l)/2;
            if(nums[mid] < nums[r]) {
                r = mid;
            } else if(nums[mid] > nums[r]) {
                l = mid+1;
            } else {
                while(l < r && nums[mid] == nums[r]) {
                    r--;
                }
                while(l < r && nums[mid] == nums[l]) {
                    l++;
                }
            }
        }
        return r;
    }
    bool bin_search(vector<int>& nums, int l, int r, int target) {
        while(l <= r) {
            int mid = l + (r-l)/2;
            if(nums[mid] == target)
                return true;
            if(nums[mid] < target)
                l = mid+1;
            else
                r = mid-1;
        }
        return false;
    }
    
    bool search(vector<int>& nums, int target) {
        int n = nums.size();
        if(n == 0)
            return false;
        int pivot = find_pivot(nums, n);
        
        if(nums[pivot] == target)
            return true;
        
        bool found = bin_search(nums, 0, pivot-1, target);
        
        if(found)
            return true;
        
        return bin_search(nums, pivot, n-1, target);
    }
};
